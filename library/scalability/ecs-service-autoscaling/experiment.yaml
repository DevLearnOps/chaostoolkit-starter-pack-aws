title: When the traffic increases, the targeted service should scale out
description: |-
  This experiment validates that the service auto-scaling policies can correctly
  scale out and increase the number of containers.
  We use Grafana k6 to generate user traffic and drive load to the infrastructure.
  After the load generation script completes, we hypothesise the targeted service
  should have scaled out to reach its maximum allowed container count.

contributions:
  security: "none"
  reliability: "medium"
  scalability: "high"

########################################################
#  Configuration
########################################################
configuration:
  environment: "live"
  stress_duration: "10m"
  stress_users: "60"
  service_max_count: 4

  cluster_name: "live-chaos-comment-cluster"
  service_name: "comments-api-service"
  script_file: "../../load-generation/comments-k6/journey_prod.js"

  application_url:
    type: probe
    provider:
      type: python
      module: devlearnops.aws.ssm.probes
      func: get_parameter
      arguments:
        name: "/${environment}/app/comments/web_url"

########################################################
#  Hypothesis
########################################################
steady-state-hypothesis:
  title: "Verify web server is available"
  probes:
    - type: probe
      name: "site-responsive"
      tolerance: true
      provider:
        func: http
        module: chaosgrafana.k6.probes
        type: python
        arguments:
          endpoint: ${application_url}/users
          method: GET
          timeout: 5
          duration: 10s
          vus: 2
    - name: "desired-equals-running"
      type: probe
      tolerance: true
      provider:
        type: python
        module: chaosaws.ecs.probes
        func: are_all_desired_tasks_running
        arguments:
          cluster: ${cluster_name}
          service: ${service_name}
    - name: "desired-containers-should-reach-max"
      type: probe
      tolerance: true
      provider:
        type: python
        module: devlearnops.aws.ecs.probes
        func: wait_for_service_attribute
        arguments:
          cluster: ${cluster_name}
          service: ${service_name}
          attribute: "runningCount"
          expected: ${service_max_count}

########################################################
#  Method
########################################################
method:
  - type: action
    name: "apply-test-load"
    provider:
      func: run_script
      module: chaosgrafana.k6.actions
      type: python
      arguments:
        script_path: ${script_file}
        vus: ${stress_users}
        duration: ${stress_duration}
        environ:
          COMMENTS_URL: "${application_url}"
