title: When ECS service reaches maximum container count, operations should be notified
description: |-
  Autoscaling Constraints, this experiment verifies the behavior of the autoscaling system
  when it reaches the upper limit for container count on the specified service.
  The template uses `chaostoolkit-terraform` to temporarily register an AWS Cloudwatch alarm
  before the experiment and verifies the alarm notification is triggered and received by the
  SQS queue within 5 minutes.

contributions:
  security: "none"
  reliability: "medium"
  scalability: "high"

configuration:
  max_desired_count: 3
  original_desired_count: 1
  cluster_name: "live-comments-full-cluster"
  service_name: "comments-api-service"
  application_url:
    type: probe
    provider:
      type: python
      module: devlearnops.aws.ssm.probes
      func: get_parameter
      arguments:
        name: "/app/comments/live/web_url"

steady-state-hypothesis:
  title: "Verify web server is available"
  probes:
    - type: probe
      name: "site-responsive"
      tolerance: true
      provider:
        func: http
        module: chaosgrafana.k6.probes
        type: python
        arguments:
          endpoint: ${application_url}/users
          method: GET
          timeout: 5
          duration: 10s
          vus: 2
    - name: "autoscaling-should-set-min-container-count"
      type: probe
      tolerance: true
      provider:
        type: python
        module: devlearnops.aws.ecs.probes
        func: wait_for_service_attribute
        arguments:
          cluster: ${cluster_name}
          service: ${service_name}
          attribute: "desiredCount"
          expected: 1
          timeout: 900 # 15 minutes

method:
  - type: action
    name: set-desired-to-max
    provider:
      type: python
      module: chaosaws.ecs.actions
      func: update_desired_count
      arguments:
        cluster: ${cluster_name}
        service: ${service_name}
        desired_count: ${max_desired_count}
