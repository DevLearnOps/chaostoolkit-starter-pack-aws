title: "ALB security group swap"
description: |
  Verify application security configuration.
  Swapping ALB (Application Load Balancer) security groups with a dummy group
  with wide open access policies should stop requests from reaching the target
  application.

contributions:
  security: "high"
  reliability: "low"
  scalability: "low"

configuration:
  # AWS Cloudwatch metric ingestion delay is about 3m
  stress_duration: "3m"
  alb_name: null
  alb_secgroup_id: null
  dummy_secgroup_id:
    type: probe
    name: "read-ssm-param"
    provider:
      type: python
      module: chaosaws_extended.ssm.probes
      func: get_parameter
      arguments:
        parameter_name: "/chaos/alb/dummy-alb-secgroup"

method:
  - type: action
    name: "alb-secgroup-swap"
    provider:
      type: python
      module: chaosaws.elbv2.actions
      func: set_security_groups
      arguments:
        load_balancer_names:
          - "${alb_name}"
        security_group_ids:
          - "${dummy_secgroup_id}"

  - type: action
    name: "stress-endpoint-with-simulated-traffic"
    provider:
      type: python
      module: chaosk6.actions
      func: stress_endpoint
      arguments:
        endpoint: "http://chaos-Appli-WII0SYITLS8C-882794639.us-east-1.elb.amazonaws.com"
        vus: 2
        duration: ${stress_duration}

steady-state-hypothesis:
  title: "Ningx web server is available"
  probes:
    - type: probe
      name: "should-have-no-successful-requests"
      tolerance: 0
      provider:
        type: python
        module: chaosaws.cloudwatch.probes
        func: get_metric_statistics
        arguments:
          namespace: "AWS/ApplicationELB"
          metric_name: HTTPCode_Target_2XX_Count
          dimensions:
            - Name: "LoadBalancer"
              Value: "app/chaos-Appli-WII0SYITLS8C/8a84528e867aa64b"
          statistic: "Sum"
          unit: "Count"
          duration: 60

          #SEARCH('{AWS/ApplicationELB,AvailabilityZone,LoadBalancer} MetricName=HTTPCode_Target_2XX_Count', 'Average', 5)

rollbacks:
  - type: action
    name: "alb-secgroup-reset"
    provider:
      type: python
      module: chaosaws.elbv2.actions
      func: set_security_groups
      arguments:
        load_balancer_names:
          - "${alb_name}"
        security_group_ids:
          - "${alb_secgroup_id}"
