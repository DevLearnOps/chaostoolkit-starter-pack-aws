title: test
description: test

contributions:
  security: "none"
  reliability: "medium"
  scalability: "high"

configuration:
  script_file: "../../load-generation/comments-k6/journey_prod.js"
  cluster_name: "live-comments-full-cluster"
  service_name: "comments-api-service"
  application_url:
    type: probe
    provider:
      type: python
      module: devlearnops.aws.ssm.probes
      func: get_parameter
      arguments:
        name: "/app/comments/live/web_url"

steady-state-hypothesis:
  title: "Verify web server is available"
  probes:
    - type: probe
      name: "site-responsive"
      tolerance: true
      provider:
        func: http
        module: chaosgrafana.k6.probes
        type: python
        arguments:
          endpoint: ${application_url}/users
          method: GET
          timeout: 5
          duration: 10s
          vus: 2

method:
  - type: action
    name: "warm-up-service"
    provider:
      func: run_script
      module: chaosgrafana.k6.actions
      type: python
      arguments:
        script_path: ${script_file}
        vus: 1
        duration: "3m"
        environ:
          COMMENTS_URL: "${application_url}"

  - type: action
    name: "introduce-cpu-stressor-downstream"
    provider:
      type: python
      module: devlearnops.aws.ecs.actions
      func: install_container_stressor
      arguments:
        cluster: ${cluster_name}
        service: ${service_name}
        stressor:
          type: cpu
          cpu_load: 50
          duration: "20m"
        stressor_delay_seconds: 120

  - type: action
    name: "apply-constant-load"
    provider:
      func: run_script
      module: chaosgrafana.k6.actions
      type: python
      arguments:
        script_path: ${script_file}
        vus: 1
        duration: "20m"
        environ:
          COMMENTS_URL: "${application_url}"

rollbacks:
  - type: action
    name: "remove-cpu-stressor"
    provider:
      type: python
      module: devlearnops.aws.ecs.actions
      func: remove_container_stressor
      arguments:
        cluster: ${cluster_name}
        service: ${service_name}
