title: Service should function normally when subnets associated to an AZ fail
description: |-
  This experiment tests that the target service is resilient in case of failure
  of an Availability Zone.
  The template simulates AZ failure by deregistering all subnets from the service
  that are associated to the AZ and terminating all tasks running in those subnets.

contributions:
  security: "none"
  reliability: "high"
  scalability: "medium"

configuration:
  stress_users: 30
  script_file: "../../load-generation/comments-k6/journey_prod.js"
  cluster_name: "live-comments-full-cluster"
  service_name: "comments-api-service"
  application_url:
    type: probe
    provider:
      type: python
      module: devlearnops.aws.ssm.probes
      func: get_parameter
      arguments:
        name: "/app/comments/live/web_url"

steady-state-hypothesis:
  title: "service-should-not-fail"
  probes:
    - type: probe
      name: "latency-alarm-should-be-OK"
      tolerance: "OK"
      provider:
        type: python
        module: chaosaws.cloudwatch.probes
        func: get_alarm_state_value
        arguments:
          alarm_name: "user-facing-alb-avg-target-response-time"
    - type: probe
      name: "site-responsive"
      tolerance: true
      provider:
        func: http
        module: chaosgrafana.k6.probes
        type: python
        arguments:
          endpoint: ${application_url}/users
          method: GET
          timeout: 5
          duration: 10s
          vus: 2

method:
  - type: action
    name: "apply-user-load-ramp"
    background: true
    provider:
      func: run_script
      module: chaosgrafana.k6.actions
      type: python
      arguments:
        script_path: ${script_file}
        stages:
          - duration: 5m
            target: ${stress_users}
          - duration: 10m
            target: ${stress_users}
        environ:
          COMMENTS_URL: "${application_url}"

  - type: action
    name: "fail-aws-availability-zone"
    provider:
      type: python
      module: chaosawsattacks.ecs.actions
      func: fail_service_subnets
      arguments:
        cluster: ${cluster_name}
        service: ${service_name}
        availability_zones:
          - us-east-1b
    pauses:
      before: 300
      after: 600

rollbacks:
  - type: action
    name: "revert-service-config"
    provider:
      type: python
      module: chaosawsattacks.ecs.actions
      func: revert_service_configuration
      arguments:
        cluster: ${cluster_name}
        service: ${service_name}
